<#@ template language="C#" debug="true"  #>
<#@ output extension=".cs" #>
<#@ import namespace="OfficeSoft.Data" #>
<#@ parameter name="namespacename" type="System.String" #>
<#@ parameter name="classname" type="System.String" #>
<#@ parameter name="table" type="OfficeSoft.Data.TableModel" #>

using System;
using System.Runtime.Serialization;
using OfficeSoft.Data.Crud;

namespace <#=this.namespacename #>	
{

    public interface I<#=this.classname #>{
        <#foreach (ColumnModel item in table.ColumnList){#>
        <#=GetSystemType(item) #> <#=item.Name #> { get; set;}
        <# } #>
    }


	[DataContract]
	public partial class <#=this.classname #> : ModelBase
	{

		public  <#=this.classname #>(){
			  Initialize();
		}


        <#foreach (ColumnModel item in table.ColumnList){#>
        private <#=GetSystemType(item)#> _<#=item.Name #>;
        <# } #>


	    <#foreach (ColumnModel item in table.ColumnList){#>
	    [DataMember]
		public <#=GetSystemType(item) #> <#=item.Name #> 
        {
            get
            {
               return _<#=item.Name #>;
            } 
            set
            {
                if(_<#=item.Name #> != value){
                    SendPropertyChanging("<#=item.Name #>");  
                    _<#=item.Name #> = value;
                    SendPropertyChanged("<#=item.Name #>"); 
                }
            }
        }
	    <# } #>


    }
}

<#+
    public string GetSystemType (OfficeSoft.Data.ColumnModel column)
    {

        var name= column.DataType.CSharpType.Name;


        if(name == "String")
            return "string";

        if(name == "Object")
            return name;

        if(name == "Int32")
            name = "int";


        
        if(column.Nullable == true)
            return string.Format("Nullable<{0}>",name);

        return name;
    }
 #>





